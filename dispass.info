This is DisPass.info, produced by makeinfo version 6.0 from
DisPass.texi.

     DisPass 0.3.0, March 18, 2016

     Benjamin Althues

     Copyright © 2011-2016 Benjamin Althues & Tom Willemse

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* DisPass: (DisPass.info). Password manager for GNU/Linux, *BSD,
                        MacOS X and Windows.
END-INFO-DIR-ENTRY


   Generated by Sphinx 1.3.6.


File: DisPass.info,  Node: Top,  Next: Resources,  Up: (dir)

DisPass Documentation
*********************

     DisPass 0.3.0, March 18, 2016

     Benjamin Althues

     Copyright © 2011-2016 Benjamin Althues & Tom Willemse

     Hint: This documentation is for version 0.3.0 of DisPass.  For
     documentation on other versions, please see the version
     overview(1).

DisPass is a password manager for GNU/Linux, *BSD, MacOS X and Windows.
It can be used as any traditional password manager, but has one key
difference.  DisPass does not store your passwords anywhere, so you can
never lose them.  It creates strong and unique passphrases formed from a
master password and a label (and some optional parameters), helping you
get rid of the bad habit of using a single password for multiple
websites.  Dispass is a console application, but also has a simple
graphical interface.

* Menu:

* Resources:: 
* Index: Index<2>. 
* Python Module Index:: 
* Index:: 

   ---------- Footnotes ----------

   (1) https://dispass.org/all.html


File: DisPass.info,  Node: Resources,  Next: Index<2>,  Prev: Top,  Up: Top

1 Resources
***********

   - Main website: ‘https://dispass.org’

   - Python Package Index: ‘http://pypi.python.org/pypi/DisPass’

   - Agile project management: ‘https://waffle.io/babab/DisPass’

   - Github: ‘https://github.com/babab/dispass’

   - Bitbucket: ‘https://bitbucket.org/babab/dispass’


File: DisPass.info,  Node: Index<2>,  Next: Python Module Index,  Prev: Resources,  Up: Top

2 Index
*******

* Menu:

* Quick start:: 
* Introduction:: 
* Downloading/Installing:: 
* Using dispass:: 
* Using gdispass:: 
* Related projects:: 
* Development:: 
* Software license:: 
* API Reference:: 


File: DisPass.info,  Node: Quick start,  Next: Introduction,  Up: Index<2>

2.1 Quick start
===============

These are quick instructions for the impatient, just wanting to check
out DisPass.  For full user documentation browse to the next sections.

* Menu:

* Download:: 
* Using DisPass for the first time:: 
* Mini screencast:: 


File: DisPass.info,  Node: Download,  Next: Using DisPass for the first time,  Up: Quick start

2.1.1 Download
--------------

Download DisPass from the Python Package Index with pip.  As root (using
sudo), do the following:

     sudo pip install dispass

If you are using Archlinux, it is advised to install dispass from the
AUR(1).

   ---------- Footnotes ----------

   (1) https://aur.archlinux.org/packages.php?K=dispass


File: DisPass.info,  Node: Using DisPass for the first time,  Next: Mini screencast,  Prev: Download,  Up: Quick start

2.1.2 Using DisPass for the first time
--------------------------------------

For this example we will create a passphrase to use for a google
account.

  1. Create and save a label ‘google’ to the labelfile:

          dispass add google

  2. Generate the passphrase for the first time.  Since you will need to
     register the passphrase with google we pass the ‘--verify’ flag or
     simply ‘-v’ so DisPass asks us to verify the password and we can
     avoid typing errors in the input password while creating the
     resulting passphrase for the first time:

          dispass generate --verify google


File: DisPass.info,  Node: Mini screencast,  Prev: Using DisPass for the first time,  Up: Quick start

2.1.3 Mini screencast
---------------------

Checkout the following mini screencast.  In this demo the label is added
interactively.


File: DisPass.info,  Node: Introduction,  Next: Downloading/Installing,  Prev: Quick start,  Up: Index<2>

2.2 Introduction
================

* Menu:

* Resources: Resources<2>. 
* Definitions:: 
* Labelfile:: 


File: DisPass.info,  Node: Resources<2>,  Next: Definitions,  Up: Introduction

2.2.1 Resources
---------------

   - Main website: ‘https://dispass.org’

   - Python Package Index: ‘http://pypi.python.org/pypi/DisPass’

   - Agile project management: ‘https://waffle.io/babab/DisPass’

   - Github: ‘https://github.com/babab/dispass’

   - Bitbucket: ‘https://bitbucket.org/babab/dispass’


File: DisPass.info,  Node: Definitions,  Next: Labelfile,  Prev: Resources<2>,  Up: Introduction

2.2.2 Definitions
-----------------

Here are some definitions which may help you understand the rest of the
documentation better.

label

     A label is a string that you use to identify the passphrase.  This
     can be a domain name of the service the passphrase is used for,
     e.g.  ’google.com’.

Since this program asks for a password/passphrase to generate another
password/passphrase, things may get a bit confusing.  I’ve decided to
use the words ’password’ and ’passphrase’ differently and consistent.

password

     Use of the word ’password’ is dedicated to the input password, i.e.
     the password you are asked to enter and only you know.  Whenever
     you read password, this is the one I mean.  The password needs to
     be at least 8 characters long and does not have a maximum length.

passphrase

     With ’passphrase’ I always mean the output passphrase, i.e.  the
     passphrase that is unique and generated from a label, password and
     sequence number.  Generated passphrases are 30 characters long.
     The length can be optionally changed.


File: DisPass.info,  Node: Labelfile,  Prev: Definitions,  Up: Introduction

2.2.3 Labelfile
---------------

DisPass does not store your passwords or passphrases, but it does store
labels and their settings (algorithm, length and sequence_number) for
convenience.  However, please keep in mind that you should try to name
labels in a way that you can easily ’dispass generate’ a passphrase on
any computer/device that has DisPass at any given moment without having
your labelfile at hand.

When dispass is run without arguments it will try to find a labelfile.
The location of this file varies and depends on the platform type you
use, the file flag and the environment variables that may be set:

You can override the location of the labelfile using the ‘-f
<labelfile>, --file=<labelfile>’ flag.  This can be a way for you to use
different sets of labels/passphrases with a different ’master’ password
for each set.

  1. If -f flag is given, that value is used.

  2. If environment var DISPASS_LABELFILE is set, that value is used.

  3. If environment var XDG_DATA_HOME is set,
     ‘$XDG_DATA_HOME/dispass/labels’ is used.

  4. If none of the above applies, the labelfile will default to the
     following locations:

        * `GNU/Linux and Mac OS X': ‘~/.dispass/labels’

        * `*BSD and other Unixen': ‘~/.dispass/labels’

        * `Windows': ‘C:\Users\<username>\dispass\labels’


File: DisPass.info,  Node: Downloading/Installing,  Next: Using dispass,  Prev: Introduction,  Up: Index<2>

2.3 Downloading/Installing
==========================

Python 2.7 is required for running dispass.

If you are using Archlinux, it is advised to install dispass from the
AUR(1).

* Menu:

* Using pip to download from the Python Package Index:: 
* Latest (development) version: Latest development version. 
* Upgrade or uninstall with pip:: 

   ---------- Footnotes ----------

   (1) https://aur.archlinux.org/packages.php?K=dispass


File: DisPass.info,  Node: Using pip to download from the Python Package Index,  Next: Latest development version,  Up: Downloading/Installing

2.3.1 Using pip to download from the Python Package Index
---------------------------------------------------------

The recommended way is to download and install directly from the PyPI
repository using pip:

     sudo pip install dispass

This will install the dispass module in python’s dist-packages folder.
You can now use dispass by executing the ‘dispass’ and/or ‘gdispass’
scripts placed under ’/usr/local/bin/’ or ’/usr/bin/’.

The PyPI project page is at ‘http://pypi.python.org/pypi/DisPass/’


File: DisPass.info,  Node: Latest development version,  Next: Upgrade or uninstall with pip,  Prev: Using pip to download from the Python Package Index,  Up: Downloading/Installing

2.3.2 Latest (development) version
----------------------------------

Clone git repo:

     git clone git://github.com/dispass/dispass.git
     cd dispass

Then you can either (in order of my personal preference):

  1. Install using the Makefile, this will perform all the steps in
     option 2 (below):

          sudo make install

  2. Install manually through pip, and install manpage:

          python setup.py sdist
          sudo pip install dist/DisPass-<version>.tar.gz
          sudo gzip -c dispass.1 > dispass.1.gz
          sudo mv dispass.1.gz /usr/share/man/man1/

  3. Install manually (no manpage):

          sudo python setup.py install


File: DisPass.info,  Node: Upgrade or uninstall with pip,  Prev: Latest development version,  Up: Downloading/Installing

2.3.3 Upgrade or uninstall with pip
-----------------------------------

You can easily upgrade to newer versions using pip:

     sudo pip install --upgrade dispass

If you have installed dispass using pip, you can easily uninstall at any
moment by running:

     sudo pip uninstall dispass


File: DisPass.info,  Node: Using dispass,  Next: Using gdispass,  Prev: Downloading/Installing,  Up: Index<2>

2.4 Using dispass
=================

* Menu:

* Basic usage:: 
* Label specifications:: 
* Adding a label:: 
* Incrementing sequence numbers:: 
* Subcommands:: 


File: DisPass.info,  Node: Basic usage,  Next: Label specifications,  Up: Using dispass

2.4.1 Basic usage
-----------------

You can start using dispass for e.g.  google.com like this:

     dispass generate google.com

The passphrases created are 30 characters long by default, but some
websites may not validate such a long passphrase or you might want to
make it even longer.  You can easily set a desired passphrase length
using the ‘-l’ flag.  Hotmail passwords are limited to 16 characters:

     dispass generate -l 16 hotmail

Generating passphrases for multiple labels is just as easy:

     dispass generate google hotmail YaHo0 "P0551bly*a81t)H4rd2rmbr"

Labels are case-sensitive and digits and special characters can be used.
You should try to name labels in a way that you can easily generate a
passphrase on any computer/device that has DisPass at any given moment.


File: DisPass.info,  Node: Label specifications,  Next: Adding a label,  Prev: Basic usage,  Up: Using dispass

2.4.2 Label specifications
--------------------------

While the above works fine without storing any information, you are
encouraged to store your labels in a labelfile for convenience.  That
way, you don’t have to use the ‘-l 16’ option everytime you create your
hotmail password.

Labels have a specification that consists of the following parameters:

   - length (the length of the passphrase)

   - algorithm (the algorithm to use)

   - sequence number (not used in default algorithm)

The `labelspec' looks like this:

     label[:size[:algorithm[:sequence_number]]]


File: DisPass.info,  Node: Adding a label,  Next: Incrementing sequence numbers,  Prev: Label specifications,  Up: Using dispass

2.4.3 Adding a label
--------------------

You can save a new ‘hotmail’ label with a length of 16 and generate the
passphrase in one go:

     dispass add -g hotmail:16

The next time you generate a passphrase for ‘hotmail’ using:

     dispass generate hotmail

it will return the same passphrase as before (with a length of 16
characters).


File: DisPass.info,  Node: Incrementing sequence numbers,  Next: Subcommands,  Prev: Adding a label,  Up: Using dispass

2.4.4 Incrementing sequence numbers
-----------------------------------

You might want to change the passphrase you enter into some system.  Of
course, you can do this simply by using a different label, e.g.:
‘Hotmail’ or ‘hotmail-2’.  You don’t have to though.

DisPass supports dealing with this situation in the `dispass2'
algorithm.  It basically gives you an option of `bumping' a passphrase
by simply incrementing a `sequence number'.

To use sequence numbers with the hotmail label from before you can
update it to use the dispass2 algorithm with sequence number 1:

     dispass update hotmail 16:dispass2:1
     dispass generate hotmail

The next time you want to use a different passphrase, you can simply use

     dispass increment hotmail
     dispass generate hotmail


File: DisPass.info,  Node: Subcommands,  Prev: Incrementing sequence numbers,  Up: Using dispass

2.4.5 Subcommands
-----------------

DisPass has many commands around managing the labels.  You can see all
available subcommands and options of dispass by running ‘dispass --help’
or just running ‘dispass’ wihout any arguments.

     usage: dispass [options] <command> [<args>]

     Commands:
        add          add a new label to labelfile
        disable      disable a label without throwing it away
        enable       enable a label
        generate     generate passphrases for one or more labels
        gui          start the graphical version of DisPass
        help         show this help information
        increment    increment the sequence number of a label
        list         print a formatted table of labelfile contents
        remove       remove label from labelfile
        update       update length, algo or seqno of a label
        version      show full version information

     Options:
     -f <labelfile>, --file=<labelfile>  override labelfile
     -h, --help                          show this help information
     -V, --version                       show full version information

     See 'dispass help <command>' for more information on a specific command.
     For full documentation, see 'man dispass' or visit https://dispass.org/

* Menu:

* dispass add:: 
* dispass disable:: 
* dispass enable:: 
* dispass generate:: 
* dispass gui:: 
* dispass help:: 
* dispass increment:: 
* dispass list:: 
* dispass remove:: 
* dispass update:: 
* dispass version:: 


File: DisPass.info,  Node: dispass add,  Next: dispass disable,  Up: Subcommands

2.4.5.1 dispass add
...................

Add a new label to the labelfile and generate passphrase.  The labelspec
looks like this: ‘label[:size[:algorithm[:sequence_number]]]’

     usage: dispass add [-g] [-n] [-s] <labelspec> [<labelspec2>] [...]
            dispass add [-i] [-g] [-h]

‘-i’
‘--interactive’

     add label in an interactive manner

‘-g’
‘--generate’

     immediately generate passphrase after adding it

‘-h’
‘--help’

     show this help information

‘-n’
‘--dry-run’

     do not actually add label to labelfile

‘-s’
‘--silent’

     do not print success message


File: DisPass.info,  Node: dispass disable,  Next: dispass enable,  Prev: dispass add,  Up: Subcommands

2.4.5.2 dispass disable
.......................

Disable a label without throwing it away

     usage: dispass disable <label>

‘-h’
‘--help’

     show this help information

‘-n’
‘--dry-run’

     do not actually update label in labelfile

‘-s’
‘--silent’

     do not print success message


File: DisPass.info,  Node: dispass enable,  Next: dispass generate,  Prev: dispass disable,  Up: Subcommands

2.4.5.3 dispass enable
......................

Enable a label

     usage: dispass enable <label>

‘-h’
‘--help’

     show this help information

‘-n’
‘--dry-run’

     do not actually update label in labelfile

‘-s’
‘--silent’

     do not print success message


File: DisPass.info,  Node: dispass generate,  Next: dispass gui,  Prev: dispass enable,  Up: Subcommands

2.4.5.4 dispass generate
........................

Generate passphrases for one or more labels

Use the ‘-v’ flag to ask for password twice to avoid typing errors

     usage: dispass generate [options] <label> [<label2>] [<label3>] [...]

‘-h’
‘--help’

     show this help information

‘-v’
‘--verify’

     verify password

‘-l <length>’
‘--length=<length>’

     length of passphrase

‘-a <algorithm>’
‘--algo=<algorithm>’

     algorithm to use for generation

‘-s <seqno>’
‘--seqno=<seqno>’

     sequence number to use for generation

‘-p <password>’
‘--password=<password>’

     password to use for generation

‘-o’
‘--stdout’

     output passphrase(s) directly to stdout

‘--silent’

     do not show a prompt when errors occur


File: DisPass.info,  Node: dispass gui,  Next: dispass help,  Prev: dispass generate,  Up: Subcommands

2.4.5.5 dispass gui
...................

Start the graphical version of DisPass.

     usage: dispass gui [-h]

‘-h’
‘--help’

     show this help information


File: DisPass.info,  Node: dispass help,  Next: dispass increment,  Prev: dispass gui,  Up: Subcommands

2.4.5.6 dispass help
....................

Show help information

     usage: dispass help [<command>]


File: DisPass.info,  Node: dispass increment,  Next: dispass list,  Prev: dispass help,  Up: Subcommands

2.4.5.7 dispass increment
.........................

Increment the sequence number of a label

     usage: dispass increment [-n] [-s] <label>
            dispass increment [-h]

‘-h’
‘--help’

     show this help information

‘-n’
‘--dry-run’

     do not actually update label in labelfile

‘-s’
‘--silent’

     do not print success message


File: DisPass.info,  Node: dispass list,  Next: dispass remove,  Prev: dispass increment,  Up: Subcommands

2.4.5.8 dispass list
....................

Print a formatted table of labelfile contents

If ‘--script’ is passed the output will be optimized for easy parsing by
other programs and scripts by not printing the header and always
printing one entry on a single line using the following positions:

     Column  1-50: labelname        50 chars wide
     Column 52-54: length            3 chars wide
     Column 56-70: hash algo        15 chars wide
     Column 72-74: sequence number   3 chars wide
     Column 76-77: disabled          1 char wide

     usage: dispass list [-h] [-n] [--script]

‘-a’
‘--all’

     include disabled labels

‘-h’
‘--help’

     show this help information

‘-n’
‘--names-only’

     only print names of the labels

‘--script’

     output in fixed columns


File: DisPass.info,  Node: dispass remove,  Next: dispass update,  Prev: dispass list,  Up: Subcommands

2.4.5.9 dispass remove
......................

Remove label from labelfile

     usage: dispass remove [-n] [-s] <labelname> [<labelname2>] [...]
            dispass remove [-i] [-h]

‘-i’
‘--interactive’

     remove label in an interactive manner

‘-h’
‘--help’

     show this help information

‘-n’
‘--dry-run’

     do not actually remove label from labelfile

‘-s’
‘--silent’

     do not print success message


File: DisPass.info,  Node: dispass update,  Next: dispass version,  Prev: dispass remove,  Up: Subcommands

2.4.5.10 dispass update
.......................

Update information for a label

     usage: dispass update [-n] [-s] <label> [<size>]:[<algorithm>]:[<sequence_number>]
            dispass update [-h]

‘-h’
‘--help’

     show this help information

‘-n’
‘--dry-run’

     do not actually update label in labelfile

‘-s’
‘--silent’

     do not print success message


File: DisPass.info,  Node: dispass version,  Prev: dispass update,  Up: Subcommands

2.4.5.11 dispass version
........................

Show full version information

     usage: dispass version


File: DisPass.info,  Node: Using gdispass,  Next: Related projects,  Prev: Using dispass,  Up: Index<2>

2.5 Using gdispass
==================

Before you start using ‘gDispass’, make sure that the Tkinter library is
available.  Here are some instructions to help you along:

Debian / Ubuntu

     Make sure the ‘python-tk’ package is installed:

          sudo apt-get install python-tk

OpenBSD

     Make sure the ‘python-tk’ package is installed:

          pkg_add -i python-tk

Archlinux

     The Tkinter Python library is included in the ‘python2’ package, to
     make it work you need to be sure the ‘tk’ package is installed:

          sudo pacman -S tk

You can start using gDisPass by running the ‘gdispass’ executable.  Fill
in a name for the label that you can easily remember.

To generate a passphrase for a new label, i.e.  a label that you have
never used before, check the appropriate checkbox.  This will allow you
to enter the (master) password twice.  gDisPass will then compare the
passwords to see if they are the same.  This is needed to minimize the
risk of typos.  It is advised that you check the box everytime you
create a passphrase for a new label.

Subsequential generation of passphrases for the same label most probably
do not need this check.  You will likely be warned when/if you made a
typo by the system or website you want to authenticate for.

If you correctly entered a label and password, you can generate the
passphrase by pressing <Return> or by clicking the appropriate button.
The resulting passphrase will be focused and selected.  On platforms
that support it (e.g.  *BSD or GNU/Linux) the passphrase will be
automatically placed into your copy/paste buffer.

Resetting all fields when you are done or when you need to quickly
cancel the generation (because someone is watching over your shoulders)
can be done by pressing <Escape> or by clicking the appropriate button.


File: DisPass.info,  Node: Related projects,  Next: Development,  Prev: Using gdispass,  Up: Index<2>

2.6 Related projects
====================

There are three related projects of DisPass, all are created by Tom
Willemse (‘https://ryuslash.org/’).

* Menu:

* dispass.el: dispass el. 
* cDisPass:: 
* libdispass:: 


File: DisPass.info,  Node: dispass el,  Next: cDisPass,  Up: Related projects

2.6.1 dispass.el
----------------

dispass.el is an emacs wrapper around DisPass.

   - Website: ‘http://ryuslash.org/projects/dispass.el.html’

   - Github: ‘https://github.com/ryuslash/dispass.el’


File: DisPass.info,  Node: cDisPass,  Next: libdispass,  Prev: dispass el,  Up: Related projects

2.6.2 cDisPass
--------------

cdispass is a JavaScript-based wrapper around DisPass for the Conkeror
Web Browser.

   - Github: ‘https://github.com/ryuslash/dispass.el’


File: DisPass.info,  Node: libdispass,  Prev: cDisPass,  Up: Related projects

2.6.3 libdispass
----------------

C library of DisPass algorithms

   - Github: ‘https://github.com/ryuslash/libdispass’


File: DisPass.info,  Node: Development,  Next: Software license,  Prev: Related projects,  Up: Index<2>

2.7 Development
===============

Please use Github and/or the Waffle.io board for bug reports, questions
or submitting pull-requests.  You can also discuss #dispass on IRC.

   - Agile project management: ‘https://waffle.io/babab/DisPass’

   - Issue tracker at Github: ‘https://github.com/babab/dispass/issues’

   - IRC: #dispass at Freenode and OFTC

* Menu:

* Acknowledgements:: 
* Change Log:: 


File: DisPass.info,  Node: Acknowledgements,  Next: Change Log,  Up: Development

2.7.1 Acknowledgements
----------------------

Many thanks go out to Tom (ryuslash) Willemse for valuable contributions
to ‘gdispass’ and the new ‘dispass2’ algorithm.  He also wrote
‘dispass.el’, ‘cDisPass’ and ‘libdispass’.


File: DisPass.info,  Node: Change Log,  Prev: Acknowledgements,  Up: Development

2.7.2 Change Log
----------------

* Menu:

* v0.3.0 - to be released: v0 3 0 - to be released. 
* v0.2.0 - released April 16th, 2013: v0 2 0 - released April 16th 2013. 
* v0.1-alpha-8 - released June 21st, 2012: v0 1-alpha-8 - released June 21st 2012. 
* v0.1-alpha-7 - released May 28th, 2012: v0 1-alpha-7 - released May 28th 2012. 
* v0.1-alpha-6 - released May 24th, 2012: v0 1-alpha-6 - released May 24th 2012. 


File: DisPass.info,  Node: v0 3 0 - to be released,  Next: v0 2 0 - released April 16th 2013,  Up: Change Log

2.7.2.1 v0.3.0 - to be released
...............................

* Menu:

* Added:: 
* Changed:: 


File: DisPass.info,  Node: Added,  Next: Changed,  Up: v0 3 0 - to be released

2.7.2.2 Added
.............

   * Option for disabling/enabling labels

   * Zsh completion for dispass (sub)command(s)

   * Interactive modes for ‘add’ and ‘rm’ commands

   * Algorithm and sequence number fields (GUI)

   * pycommand dependency for command argument parsing (extracted from
     DisPass)


File: DisPass.info,  Node: Changed,  Prev: Added,  Up: v0 3 0 - to be released

2.7.2.3 Changed
...............

   * Lookup label parameters from labelfile

   * Use different subcommands for all actions

        - add

        - disable

        - enable

        - generate

        - gui

        - help

        - increment

        - list

        - remove

        - update

        - version

   * Include Python version in version information

   * Drop support for arguments for ‘-h, --help’, you can use the new
     help command for that.

   * Always save full label specifications in labelfile

   * Focus password field after selecting a label (GUI)

   * Select label options after FocusOut (GUI)

   * Filter labels in combobox by given value (GUI)

   * Use a vertical layout instead of a horizontal one (GUI)

   * Make the gui `command' listen to the -f switch (GUI)

   * Use a more flexible approach for algorithm handling

   * The file /skel/labelfile is removed


File: DisPass.info,  Node: v0 2 0 - released April 16th 2013,  Next: v0 1-alpha-8 - released June 21st 2012,  Prev: v0 3 0 - to be released,  Up: Change Log

2.7.2.4 v0.2.0 - released April 16th, 2013
..........................................

     Warning: The default location of labelfile has changed from:

        * `*nix': ‘~/.dispass’

        * `Windows': ‘C:\Users\<username>\.dispass’

     To the following location:

        * `*nix': ‘~/.config/dispass/labels’

        * `Windows': ‘C:\Users\<username>\dispass\labels’

   * Add support for multiple algorithms

   * Add new algorithm Dispass2

   * Add -a, –algo option for specifying algorithm

   * Add -n, –number option for specifying sequence number

   * Add label length selection in gui

   * Add label/parameters selection in gui

   * Add interactive labelfile editor ’dispass-label’

   * Center the fields when the window gets bigger

   * Reset all fields in gdispass by pressing <Escape>

   * Optionally quit gdispass with Ctrl-Q

   * Gracefully quit on (Ctrl-C) keyboard interrupt

   * Clear input fields after passphrase generation

   * Auto-select generated passphrase in gdispass

   * Generate passphrases in gdispass by pressing <Return>

   * Change default location of labelfile

   * Add dispass ‘–script’ option

   * Add dispass-label for managing labelfiles

   * Use separate text for manpage instead of README

   * Add option to lookup a lable in with ’-s’ switch

   * Require a minimum password length of 8 chars in CLI

   * Rename ChangeLog -> ChangeLog.rst

   * Make DisPass run from Python shell without exiting

   * Remove dispass.el emacs wrapper, maintained separately by Tom
     Willemse


File: DisPass.info,  Node: v0 1-alpha-8 - released June 21st 2012,  Next: v0 1-alpha-7 - released May 28th 2012,  Prev: v0 2 0 - released April 16th 2013,  Up: Change Log

2.7.2.5 v0.1-alpha-8 - released June 21st, 2012
...............................................

   * Add dispass.el emacs wrapper, authored by Tom Willemse (ryuslash)

   * Allow generating a list of passphrases with varying lengths

   * Add labelfile handler and skel/dot.dispass

   * Add -f <labelfile>, –file=<labelfile> option

   * Use labelfile at $HOME/.dispass if no labels are specified

   * Add -l <length> –length= option

   * Do not autostart gui on Windows

   * Explicitly name the gui version ’gDisPass’

   * Autofill 1st column on output via stdout

   * Remove platform name from usage/help

   * Add manpage

   * Use a landing page for the html documentation


File: DisPass.info,  Node: v0 1-alpha-7 - released May 28th 2012,  Next: v0 1-alpha-6 - released May 24th 2012,  Prev: v0 1-alpha-8 - released June 21st 2012,  Up: Change Log

2.7.2.6 v0.1-alpha-7 - released May 28th, 2012
..............................................

   * Distribute as package instead of a single module

   * Add LICENSE file

   * Rename README to README.rst

   * Add ’master’ Makefile for building documentation


File: DisPass.info,  Node: v0 1-alpha-6 - released May 24th 2012,  Prev: v0 1-alpha-7 - released May 28th 2012,  Up: Change Log

2.7.2.7 v0.1-alpha-6 - released May 24th, 2012
..............................................

   * Initial release of Dispass as single python module


File: DisPass.info,  Node: Software license,  Next: API Reference,  Prev: Development,  Up: Index<2>

2.8 Software license
====================

DisPass is released under an ISC license, which is functionally
equivalent to the simplified BSD and MIT/Expat licenses, with language
that was deemed unnecessary by the Berne convention removed.

     Copyright (c) 2012-2016  Tom Willemse <tom@ryuslash.org>
     Copyright (c) 2011-2016  Benjamin Althues <benjamin@althu.es>

     Permission to use, copy, modify, and distribute this software for any
     purpose with or without fee is hereby granted, provided that the above
     copyright notice and this permission notice appear in all copies.

     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
     WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
     MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
     ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
     WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
     ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
     OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.


File: DisPass.info,  Node: API Reference,  Prev: Software license,  Up: Index<2>

2.9 API Reference
=================

   * genindex

   * modindex

   * search

* Menu:

* Core modules:: 
* Interface modules:: 
* Subcommand modules:: 


File: DisPass.info,  Node: Core modules,  Next: Interface modules,  Up: API Reference

2.9.1 Core modules
------------------

* Menu:

* dispass.algos: dispass algos. 
* dispass.dispass: dispass dispass. 


File: DisPass.info,  Node: dispass algos,  Next: dispass dispass,  Up: Core modules

2.9.1.1 dispass.algos
.....................

The algos module is the most important part of DisPass.  The algorithms
DisPass uses to create the passphrases are defined as separate classes
in the ‘dispass.algos’ module.

 -- Class: dispass.algos.Dispass1

     Dispass1 algorithm

     Tests:

          >>> dispass1 = Dispass1()
          >>> dispass1.digest('test', 'qqqqqqqq')
          'Y2Y4Y2Y0Yzg5Nzc1Yzc2MmI4OTU0ND'
          >>> dispass1.digest('test2', 'qqqqqqqq', 50)
          'NmQzNjUzZTlhNTc4NWFlNTU5ZTVkZGQ5ZTc2NzliZjgzZDQ1Zj'

      -- Static Method: digest (label, password, length=30, seqno=None)

          Create and return secure hash of message

          A secure hash/message digest formed by hashing a string
          (formed by concatenating label+password) with the sha512
          algorithm, encoding this hash with base64 and stripping it
          down to the first ‘length’ characters.


          Parameters:

             - ‘label’: String.  Labelname

             - ‘password’: String.  The input password

             - ‘length’: Length of output hash (optional)

             - ‘seqno’: Sequence number.  Not used in Dispass1


          Return:

             - The secure hash of ‘label’ + ‘password’

 -- Class: dispass.algos.Dispass2

     Dispass2 algorithm

     Tests:

          >>> dispass2 = Dispass2()
          >>> dispass2.digest('test', 'qqqqqqqq')
          'ZTdiNGNkYmQ2ZjFmNzc3NGFjZWEwMz'
          >>> dispass2.digest('test2', 'qqqqqqqq', 50, 10)
          'NGEwNjMxMzZiMzljODVmODk4OWQ1ZmE4YTRlY2E4ODZkZjZlZW'

      -- Static Method: digest (label, password, length=30, seqno=1)

          Create and return secure hash of message

          A secure hash/message digest formed by hashing a string
          (formed by concatenating label+seqno+password) with the sha512
          algorithm, encoding this hash with base64 and stripping it
          down to the first ‘length’ characters.


          Parameters:

             - ‘label’: String.  Labelname

             - ‘password’: String.  The input password

             - ‘length’: Length of output hash (optional)

             - ‘seqno’: Integer.  Sequence number.


          Return:

             - The secure hash of ‘label’ + ‘seqno’ + ‘password’

 -- Function: dispass.algos.algoObject (algoname)

     Return an algorithm object


     Parameters:

        - ‘algoname’: String.  Name of the algorithm


     Return:

        - An algorithm object or False

 -- Data: dispass.algos.algorithms = ('dispass1', 'dispass2')

     A tuple of registrered algorithms, used for validation of user
     input


File: DisPass.info,  Node: dispass dispass,  Prev: dispass algos,  Up: Core modules

2.9.1.2 dispass.dispass
.......................

Password manager for GNU/Linux, *BSD, MacOS X and Windows.

 -- Class: dispass.dispass.DispassCommand (argv=['-b', 'texinfo', '-d',
          '_build/doctrees', '.', '_build/texinfo'])

     Main shell command object

      -- Method: run ()

          The ‘run’ method of the main command

          This is the first point of entry that will parse the command
          and arguments given in the shell by the user, directing
          arguments to subcommands if applicable.

          The subcommands are imported in this method, since doing it in
          the module itself causes circular import problems.  There is
          support for dynamically loading the modules, so you can define
          custom commands.  The (main) subcommands get imported
          explicitly so that ’freezing’ apps like PyInstaller will
          correctly include the modules.

 -- Class: dispass.dispass.Settings

     Global settings

      -- Attribute: algorithm = 'dispass1'

          String.  The algorithm to use, default is dispass1

      -- Attribute: disabled = False

          Bool.  Default disabled state

      -- Attribute: passphrase_length = 30

          Int.  Default passphrase length

      -- Attribute: sequence_number = 1

          Int.  Default sequence number

 -- Function: dispass.dispass.verboseVersionInfo ()

     Returns a string with verbose version information

     The string shows the version of DisPass and that of Python.  It
     also displays the name of the operating system/platform name.


File: DisPass.info,  Node: Interface modules,  Next: Subcommand modules,  Prev: Core modules,  Up: API Reference

2.9.2 Interface modules
-----------------------

* Menu:

* dispass.cli: dispass cli. 
* dispass.gui: dispass gui<2>. 
* dispass.filehandler: dispass filehandler. 
* dispass.interactive_editor: dispass interactive_editor. 


File: DisPass.info,  Node: dispass cli,  Next: dispass gui<2>,  Up: Interface modules

2.9.2.1 dispass.cli
...................

 -- Class: dispass.cli.CLI (filehandler)

     Command Line Interface handling

      -- Method: generate (password, labeltup)

          Generate passphrase and store result in ‘passphrases’


          Parameters:

             - ‘password’: Password to use for passphrase generation

             - 
               ‘labeltup’: A tuple ‘labeltup’ with 5 values:

                       * ‘label’: Label to use for passphrase generation

                       * ‘length’: Length to use for passphrase
                         generation

                       * ‘algo’: Algorithm to use for passphrase
                         generation

                       * ‘seqno’: Sequence number to use for passphrase
                         generation

                       * ‘disabled’: Whether or not the label is
                         disabled

      -- Method: output ()

          Output and flush passphrase(s)

      -- Attribute: passphrases = {}

          Dict of labels and generated passphrases

      -- Method: passwordPrompt ()

          Prompt for password

          Use the ‘getpass.getpass’ function to ask the user for the
          password and ensure it is 8 characters.  The password will be
          asked twice if ‘self.verifyPassword’ == ‘True’.


          Return: Password string.

      -- Attribute: scriptableIO = False

          Boolean.  Optimize input/output for wrapping dispass

      -- Method: setCurses (useCurses)

          Optionally override ‘self.useCurses’

          Instead of setting the instance variable ‘self.useCurses’
          directly, a setter is used to ensure it can only be set to
          ‘True’ if the curses library is supported.


          Parameters:

             - ‘useCurses’: Boolean

      -- Attribute: verifyPassword = False

          Boolean.  Prompt for password twice and save label to
          labelfile


File: DisPass.info,  Node: dispass gui<2>,  Next: dispass filehandler,  Prev: dispass cli,  Up: Interface modules

2.9.2.2 dispass.gui
...................

 -- Class: dispass.gui.GUI (settings, filehandler)

     Houses all GUI related objects and interactions

      -- Method: clearIO ()

          Clear all input and output fields

      -- Method: clearInput ()

          Clear all input fields

      -- Method: clearOutput ()

          Clear all output fields

      -- Method: createWidgets ()

          Create and align widgets

      -- Method: filterLabels ()

          Filter labels according to what was typed into the entry.

      -- Attribute: font = 'Verdana'

          Default font (Verdana)

      -- Attribute: fontsize = 10

          Default fontsize (10 pt.)

      -- Method: getFont (sizediff=0)

          Get ‘font’ and ‘fontsize’, optionally differ from default
          ‘fontsize’


          Parameters:

             - ‘sizediff’: The difference in pt.  from the default
               ‘fontsize’


          Return:

             - Tuple of ‘(font, fontsize)’ to be used when creating
               widgets

      -- Method: labelFocusOut (event)

          Set values of input fields according to the selected label.

      -- Method: labelSelected (event)

          Change focus to password field.

      -- Method: reset ()

          Clear all input and output and focus label entry

      -- Method: toggleCheck ()

          Toggle checking of input password

      -- Method: validateAndShow ()

          Check user input

          Warn when user input is insufficient or wrong.  Create digest
          and display the generated password if user input is OK.

      -- Method: warn (message, warning_type='soft', box_title='')

          Prototype for warning user

                  * soft warnings display a message in the passwordout
                    field

                  * hard warnings do the same and also display a
                    messagebox


          Parameters:

             - ‘message’: The message string for warning the user

             - ‘warning_type’: Either ’soft’ (default value) or ’hard’

             - ‘box_title’: Optional title for tkMessageBox on hard
               warnings


File: DisPass.info,  Node: dispass filehandler,  Next: dispass interactive_editor,  Prev: dispass gui<2>,  Up: Interface modules

2.9.2.3 dispass.filehandler
...........................

Dispass labelfile handler

 -- Class: dispass.filehandler.Filehandler (settings,
          file_location=None)

     Parsing of labelfiles and writing to labelfiles

      -- Method: add (labelname, length=None, algo=None, seqno=None,
               disabled=False)

          Add label to ‘labelfile’

      -- Method: disable (labelname, disabled=True)

          Disable or enable a label

      -- Attribute: file_found = None

          Boolean value set on init

      -- Attribute: file_location = None

          String of labelfile location, set on init

      -- Attribute: filehandle = None

          File object, set on init if labelfile is found

      -- Method: getDefaultFileLocation ()

          Scan default labelfile paths

      -- Method: increment (labelname)

          Increment sequence number of ‘labelfile’

      -- Attribute: labelfile = []

          List of [(labelname, length, algorithm, seqno, disabled), ...
          ]

      -- Method: labeltup (label)

          Get labeltup for ‘label’


          Parameters:

             - ‘label’: The labelname


          Returns:

             - 
               A tuple with 5 values ‘(label, length, algo, seqno, disabled))’

                       - ‘label’: Label to use for passphrase generation

                       - ‘length’: Length to use for passphrase
                         generation

                       - ‘algo’: Algorithm to use for passphrase
                         generation

                       - ‘seqno’: Sequence number to use for passphrase
                         generation

                       - ‘disabled’: Whether or not the passphrase is
                         disabled

      -- Attribute: longest_label = None

          Int.  Length of the longest labelname of ‘labelfile’.  Set on
          refresh()

      -- Method: parse ()

          Create dictionary {algorithm: (label, (length, seqno,
          disabled))}

      -- Method: printLabels (fixed_columns=False, labels_only=False,
               all_=False)

          Print a formatted table of labelfile contents


          Parameters:

             - ‘fixed_columns’: Boolean.

             - ‘labels_only’: Boolean.

          If ‘labels_only’ is True, only the labelnames will be printed.

          If ‘fixed_columns’ is true the output will be optimized for
          easy parsing by other programs and scripts by not printing the
          header and always printing one entry on a single line using
          the following positions:

             * Column 1-50: labelname (50 chars)

             * Column 52-54: length (3 chars wide)

             * Column 56-70: hash algo (15 chars wide)

             * Column 72-74: sequence number (3 chars wide)

             * Column 76-77: disabled (1 char wide)

          If fixed columns is false an ascii table is printed with a
          variable width depending on the length of the longest label.

      -- Method: promptForCreation (silent=False)

          Create the labelfile, optionally warning the user beforehand


          Parameters:

             - ‘silent’: When True, the user will not be warned.


          Returns: Boolean.  Indicating if the labelfile was created
          succesfully.

      -- Method: refresh (sort=True)

          Sort ‘labelfile’ on labelname and get longest label

      -- Method: remove (labelname)

          Remove label from ‘labelfile’

      -- Method: save ()

          Save ‘labelfile’ to file

      -- Method: update (labelname, length=None, algo=None, seqno=None,
               disabled=None)

          Update label in ‘labelfile’


File: DisPass.info,  Node: dispass interactive_editor,  Prev: dispass filehandler,  Up: Interface modules

2.9.2.4 dispass.interactive_editor
..................................

 -- Class: dispass.interactive_editor.InteractiveEditor (settings,
          filehandler, interactive=False)

     User interface for altering labelfiles

      -- Attribute: filehandler = None

          Filehandler object

      -- Method: read_label ()

          Keep bugging the user for a label until they crack and give us
          one.


File: DisPass.info,  Node: Subcommand modules,  Prev: Interface modules,  Up: API Reference

2.9.3 Subcommand modules
------------------------

Subcommands are defined in the ‘dispass.commands’ package as separate
modules containing a class derived from ‘pycommand.CommandBase’.

* Menu:

* dispass.commands.add: dispass commands add. 
* dispass.commands.generate: dispass commands generate. 
* dispass.commands.gui: dispass commands gui. 
* dispass.commands.help: dispass commands help. 
* dispass.commands.increment: dispass commands increment. 
* dispass.commands.list: dispass commands list. 
* dispass.commands.remove: dispass commands remove. 
* dispass.commands.version: dispass commands version. 


File: DisPass.info,  Node: dispass commands add,  Next: dispass commands generate,  Up: Subcommand modules

2.9.3.1 dispass.commands.add
............................

Subcommand module ‘add’; contains only a single class ‘Command’

 -- Class: dispass.commands.add.Command (argv=['-b', 'texinfo', '-d',
          '_build/doctrees', '.', '_build/texinfo'])

     Add a new label to the labelfile and generate passphrase.

      -- Method: run ()

          Parse labels and add them using ‘FileHandler.add’.

          When the -i flag is passed, add them using
          ‘InteractiveEditor.add’


File: DisPass.info,  Node: dispass commands generate,  Next: dispass commands gui,  Prev: dispass commands add,  Up: Subcommand modules

2.9.3.2 dispass.commands.generate
.................................

Subcommand module ‘generate’; contains only a single class ‘Command’

 -- Class: dispass.commands.generate.Command (argv=['-b', 'texinfo',
          '-d', '_build/doctrees', '.', '_build/texinfo'])

     Generate passphrases for one or more labels

      -- Method: run ()

          Parse the various arguments and output passphrases for each
          label

          Each positional argument is a label.  For each label, it will
          try to find (via ‘FileHandler.labletup’) if it is in the
          labelfile so other settings for the label can be applied.  If
          it is not found, the default settings object defined as
          ‘dispass.dispass.settings’ will be used.  The parameters can
          be overridden through the various optargs.


File: DisPass.info,  Node: dispass commands gui,  Next: dispass commands help,  Prev: dispass commands generate,  Up: Subcommand modules

2.9.3.3 dispass.commands.gui
............................

Subcommand module ‘gui’; contains only a single class ‘Command’

 -- Class: dispass.commands.gui.Command (argv=['-b', 'texinfo', '-d',
          '_build/doctrees', '.', '_build/texinfo'])

     Start the graphical version of DisPass

      -- Method: run ()

          Entry point and handler of command options and arguments


File: DisPass.info,  Node: dispass commands help,  Next: dispass commands increment,  Prev: dispass commands gui,  Up: Subcommand modules

2.9.3.4 dispass.commands.help
.............................

Subcommand module ‘help’; contains only a single class ‘Command’

 -- Class: dispass.commands.help.Command (argv=['-b', 'texinfo', '-d',
          '_build/doctrees', '.', '_build/texinfo'])

     Show help information


File: DisPass.info,  Node: dispass commands increment,  Next: dispass commands list,  Prev: dispass commands help,  Up: Subcommand modules

2.9.3.5 dispass.commands.increment
..................................

Subcommand module ‘increment’; contains only a single class ‘Command’

 -- Class: dispass.commands.increment.Command (argv=['-b', 'texinfo',
          '-d', '_build/doctrees', '.', '_build/texinfo'])

     Increment the sequence number of a label

      -- Method: run ()

          Parse the arguments and increment using
          ‘FileHandler.increment’.


File: DisPass.info,  Node: dispass commands list,  Next: dispass commands remove,  Prev: dispass commands increment,  Up: Subcommand modules

2.9.3.6 dispass.commands.list
.............................

Subcommand module ‘list’; contains only a single class ‘Command’

 -- Class: dispass.commands.list.Command (argv=['-b', 'texinfo', '-d',
          '_build/doctrees', '.', '_build/texinfo'])

     Print a formatted table of labelfile contents


File: DisPass.info,  Node: dispass commands remove,  Next: dispass commands version,  Prev: dispass commands list,  Up: Subcommand modules

2.9.3.7 dispass.commands.remove
...............................

Subcommand module ‘remove’; contains only a single class ‘Command’

 -- Class: dispass.commands.remove.Command (argv=['-b', 'texinfo', '-d',
          '_build/doctrees', '.', '_build/texinfo'])

     Remove label from labelfile


File: DisPass.info,  Node: dispass commands version,  Prev: dispass commands remove,  Up: Subcommand modules

2.9.3.8 dispass.commands.version
................................

 -- Class: dispass.commands.version.Command (argv=['-b', 'texinfo',
          '-d', '_build/doctrees', '.', '_build/texinfo'])

     Show full version information


File: DisPass.info,  Node: Python Module Index,  Next: Index,  Prev: Index<2>,  Up: Top

Python Module Index
*******************

* Menu:

* dispass.algos: 0. 
* dispass.cli: 1. 
* dispass.commands.add: 2. 
* dispass.commands.generate: 3. 
* dispass.commands.gui: 4. 
* dispass.commands.help: 5. 
* dispass.commands.increment: 6. 
* dispass.commands.list: 7. 
* dispass.commands.remove: 8. 
* dispass.commands.version: 9. 
* dispass.dispass: a. 
* dispass.filehandler: b. 
* dispass.gui: c. 
* dispass.interactive_editor: d. 


File: DisPass.info,  Node: Index,  Prev: Python Module Index,  Up: Top

Index
*****

 [index ]
* Menu:

* add() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line  13)
* algoObject() (in module dispass.algos): dispass algos.      (line  84)
* algorithm (dispass.dispass.Settings attribute): dispass dispass.
                                                              (line  32)
* algorithms (in module dispass.algos):  dispass algos.       (line  98)
* clearInput() (dispass.gui.GUI method): dispass gui<2>.      (line  14)
* clearIO() (dispass.gui.GUI method):    dispass gui<2>.      (line  10)
* clearOutput() (dispass.gui.GUI method): dispass gui<2>.     (line  18)
* CLI (class in dispass.cli):            dispass cli.         (line   6)
* Command (class in dispass.commands.add): dispass commands add.
                                                              (line   8)
* Command (class in dispass.commands.generate): dispass commands generate.
                                                              (line   8)
* Command (class in dispass.commands.gui): dispass commands gui.
                                                              (line   8)
* Command (class in dispass.commands.help): dispass commands help.
                                                              (line   8)
* Command (class in dispass.commands.increment): dispass commands increment.
                                                              (line   8)
* Command (class in dispass.commands.list): dispass commands list.
                                                              (line   8)
* Command (class in dispass.commands.remove): dispass commands remove.
                                                              (line   8)
* Command (class in dispass.commands.version): dispass commands version.
                                                              (line   6)
* createWidgets() (dispass.gui.GUI method): dispass gui<2>.   (line  22)
* digest() (dispass.algos.Dispass1 static method): dispass algos.
                                                              (line  22)
* digest() (dispass.algos.Dispass2 static method): dispass algos.
                                                              (line  59)
* disable() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line  18)
* disabled (dispass.dispass.Settings attribute): dispass dispass.
                                                              (line  36)
* dispass.algos (module):                dispass algos.       (line   8)
* dispass.cli (module):                  dispass cli.         (line   6)
* dispass.commands.add (module):         dispass commands add.
                                                              (line   6)
* dispass.commands.generate (module):    dispass commands generate.
                                                              (line   6)
* dispass.commands.gui (module):         dispass commands gui.
                                                              (line   6)
* dispass.commands.help (module):        dispass commands help.
                                                              (line   6)
* dispass.commands.increment (module):   dispass commands increment.
                                                              (line   6)
* dispass.commands.list (module):        dispass commands list.
                                                              (line   6)
* dispass.commands.remove (module):      dispass commands remove.
                                                              (line   6)
* dispass.commands.version (module):     dispass commands version.
                                                              (line   6)
* dispass.dispass (module):              dispass dispass.     (line   6)
* dispass.filehandler (module):          dispass filehandler. (line   6)
* dispass.gui (module):                  dispass gui<2>.      (line   6)
* dispass.interactive_editor (module):   dispass interactive_editor.
                                                              (line   6)
* Dispass1 (class in dispass.algos):     dispass algos.       (line  10)
* Dispass2 (class in dispass.algos):     dispass algos.       (line  47)
* DispassCommand (class in dispass.dispass): dispass dispass. (line   8)
* filehandle (dispass.filehandler.Filehandler attribute): dispass filehandler.
                                                              (line  30)
* Filehandler (class in dispass.filehandler): dispass filehandler.
                                                              (line   8)
* filehandler (dispass.interactive_editor.InteractiveEditor attribute): dispass interactive_editor.
                                                              (line  11)
* file_found (dispass.filehandler.Filehandler attribute): dispass filehandler.
                                                              (line  22)
* file_location (dispass.filehandler.Filehandler attribute): dispass filehandler.
                                                              (line  26)
* filterLabels() (dispass.gui.GUI method): dispass gui<2>.    (line  26)
* font (dispass.gui.GUI attribute):      dispass gui<2>.      (line  30)
* fontsize (dispass.gui.GUI attribute):  dispass gui<2>.      (line  34)
* generate() (dispass.cli.CLI method):   dispass cli.         (line  10)
* getDefaultFileLocation() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line  34)
* getFont() (dispass.gui.GUI method):    dispass gui<2>.      (line  38)
* GUI (class in dispass.gui):            dispass gui<2>.      (line   6)
* increment() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line  38)
* InteractiveEditor (class in dispass.interactive_editor): dispass interactive_editor.
                                                              (line   6)
* labelfile (dispass.filehandler.Filehandler attribute): dispass filehandler.
                                                              (line  42)
* labelFocusOut() (dispass.gui.GUI method): dispass gui<2>.   (line  55)
* labelSelected() (dispass.gui.GUI method): dispass gui<2>.   (line  59)
* labeltup() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line  47)
* longest_label (dispass.filehandler.Filehandler attribute): dispass filehandler.
                                                              (line  76)
* output() (dispass.cli.CLI method):     dispass cli.         (line  36)
* parse() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line  81)
* passphrases (dispass.cli.CLI attribute): dispass cli.       (line  40)
* passphrase_length (dispass.dispass.Settings attribute): dispass dispass.
                                                              (line  40)
* passwordPrompt() (dispass.cli.CLI method): dispass cli.     (line  44)
* printLabels() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line  86)
* promptForCreation() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line 118)
* read_label() (dispass.interactive_editor.InteractiveEditor method): dispass interactive_editor.
                                                              (line  15)
* refresh() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line 131)
* remove() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line 135)
* reset() (dispass.gui.GUI method):      dispass gui<2>.      (line  63)
* run() (dispass.commands.add.Command method): dispass commands add.
                                                              (line  13)
* run() (dispass.commands.generate.Command method): dispass commands generate.
                                                              (line  13)
* run() (dispass.commands.gui.Command method): dispass commands gui.
                                                              (line  13)
* run() (dispass.commands.increment.Command method): dispass commands increment.
                                                              (line  13)
* run() (dispass.dispass.DispassCommand method): dispass dispass.
                                                              (line  13)
* save() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line 139)
* scriptableIO (dispass.cli.CLI attribute): dispass cli.      (line  55)
* sequence_number (dispass.dispass.Settings attribute): dispass dispass.
                                                              (line  44)
* setCurses() (dispass.cli.CLI method):  dispass cli.         (line  59)
* Settings (class in dispass.dispass):   dispass dispass.     (line  28)
* toggleCheck() (dispass.gui.GUI method): dispass gui<2>.     (line  67)
* update() (dispass.filehandler.Filehandler method): dispass filehandler.
                                                              (line 143)
* validateAndShow() (dispass.gui.GUI method): dispass gui<2>. (line  71)
* verboseVersionInfo() (in module dispass.dispass): dispass dispass.
                                                              (line  48)
* verifyPassword (dispass.cli.CLI attribute): dispass cli.    (line  72)
* warn() (dispass.gui.GUI method):       dispass gui<2>.      (line  78)



Tag Table:
Node: Top409
Ref: index doc638
Ref: e638
Ref: Top-Footnote-11414
Node: Resources1451
Ref: index dispass1530
Ref: f1530
Ref: index resources1530
Ref: 101530
Node: Index<2>1853
Ref: index index1948
Ref: 111948
Node: Quick start2157
Ref: quick-start quick-start2235
Ref: 122235
Ref: quick-start doc2235
Ref: 132235
Node: Download2493
Ref: quick-start download2591
Ref: 142591
Ref: Download-Footnote-12867
Node: Using DisPass for the first time2924
Ref: quick-start using-dispass-for-the-first-time3046
Ref: 153046
Node: Mini screencast3671
Ref: quick-start mini-screencast3776
Ref: 163776
Node: Introduction3910
Ref: introduction introduction4019
Ref: 174019
Ref: introduction doc4019
Ref: 184019
Node: Resources<2>4124
Ref: introduction resources4206
Ref: 194206
Node: Definitions4537
Ref: introduction definitions4637
Ref: 1a4637
Node: Labelfile5739
Ref: introduction labelfile5818
Ref: 1b5818
Node: Downloading/Installing7168
Ref: installing downloading-installing7279
Ref: 1c7279
Ref: installing doc7279
Ref: 1d7279
Ref: Downloading/Installing-Footnote-17657
Node: Using pip to download from the Python Package Index7714
Ref: installing using-pip-to-download-from-the-python-package-index7860
Ref: 1e7860
Node: Latest development version8387
Ref: installing latest-development-version8571
Ref: 1f8571
Node: Upgrade or uninstall with pip9232
Ref: installing upgrade-or-uninstall-with-pip9356
Ref: 209356
Node: Using dispass9649
Ref: using-dispass doc9762
Ref: 219762
Ref: using-dispass using-dispass9762
Ref: 229762
Node: Basic usage9924
Ref: using-dispass basic-usage10015
Ref: 2310015
Node: Label specifications10813
Ref: using-dispass label-specifications10927
Ref: 2410927
Node: Adding a label11509
Ref: using-dispass adding-a-label11641
Ref: 2511641
Node: Incrementing sequence numbers11992
Ref: using-dispass incrementing-sequence-numbers12115
Ref: 2612115
Node: Subcommands12909
Ref: using-dispass subcommands13009
Ref: 2713009
Node: dispass add14521
Ref: using-dispass dispass-add14605
Ref: 2814605
Node: dispass disable15237
Ref: using-dispass dispass-disable15344
Ref: 2915344
Node: dispass enable15662
Ref: using-dispass dispass-enable15774
Ref: 2a15774
Node: dispass generate16063
Ref: using-dispass dispass-generate16171
Ref: 2b16171
Node: dispass gui16975
Ref: using-dispass dispass-gui17081
Ref: 2c17081
Node: dispass help17249
Ref: using-dispass dispass-help17356
Ref: 2d17356
Node: dispass increment17460
Ref: using-dispass dispass-increment17568
Ref: 2e17568
Node: dispass list17937
Ref: using-dispass dispass-list18047
Ref: 2f18047
Node: dispass remove18864
Ref: using-dispass dispass-remove18971
Ref: 3018971
Node: dispass update19421
Ref: using-dispass dispass-update19531
Ref: 3119531
Node: dispass version19923
Ref: using-dispass dispass-version20010
Ref: 3220010
Node: Using gdispass20121
Ref: using-gdispass doc20228
Ref: 3320228
Ref: using-gdispass using-gdispass20228
Ref: 3420228
Node: Related projects22070
Ref: development related-projects22175
Ref: 3522175
Ref: development doc22175
Ref: 3622175
Node: dispass el22394
Ref: development dispass-el22475
Ref: 3722475
Node: cDisPass22683
Ref: development cdispass22783
Ref: 3822783
Node: libdispass22958
Ref: development libdispass23039
Ref: 3923039
Node: Development23166
Ref: development development23273
Ref: 3a23273
Node: Acknowledgements23683
Ref: development acknowledgements23767
Ref: 3b23767
Node: Change Log24014
Ref: development change-log24098
Ref: 3c24098
Node: v0 3 0 - to be released24518
Ref: development v0-3-0-to-be-released24631
Ref: 3d24631
Node: Added24730
Ref: development added24812
Ref: 3e24812
Node: Changed25128
Ref: development changed25210
Ref: 3f25210
Node: v0 2 0 - released April 16th 201326122
Ref: development v0-2-0-released-april-16th-201326282
Ref: 4026282
Node: v0 1-alpha-8 - released June 21st 201227859
Ref: development v0-1-alpha-8-released-june-21st-201228033
Ref: 4128033
Node: v0 1-alpha-7 - released May 28th 201228726
Ref: development v0-1-alpha-7-released-may-28th-201228904
Ref: 4228904
Node: v0 1-alpha-6 - released May 24th 201229170
Ref: development v0-1-alpha-6-released-may-24th-201229301
Ref: 4329301
Node: Software license29453
Ref: development software-license29557
Ref: 4429557
Node: API Reference30672
Ref: api-reference api-reference30756
Ref: 4530756
Ref: api-reference doc30756
Ref: 4630756
Node: Core modules30911
Ref: api-reference core-modules31000
Ref: 4731000
Node: dispass algos31119
Ref: api-reference dispass-algos31206
Ref: 4831206
Ref: api-reference module-dispass algos31428
Ref: 031428
Ref: api-reference dispass algos Dispass131430
Ref: 4931430
Ref: api-reference dispass algos Dispass1 digest31751
Ref: 4a31751
Ref: api-reference dispass algos Dispass232479
Ref: 4b32479
Ref: api-reference dispass algos Dispass2 digest32804
Ref: 4c32804
Ref: api-reference dispass algos algoObject33537
Ref: 4d33537
Ref: api-reference dispass algos algorithms33753
Ref: 4e33753
Node: dispass dispass33896
Ref: api-reference dispass-dispass33983
Ref: 4f33983
Ref: api-reference module-dispass dispass33983
Ref: a33983
Ref: api-reference dispass dispass DispassCommand34092
Ref: 5034092
Ref: api-reference dispass dispass DispassCommand run34250
Ref: 5134250
Ref: api-reference dispass dispass Settings34909
Ref: 5234909
Ref: api-reference dispass dispass Settings algorithm34968
Ref: 5334968
Ref: api-reference dispass dispass Settings disabled35074
Ref: 5435074
Ref: api-reference dispass dispass Settings passphrase_length35153
Ref: 5535153
Ref: api-reference dispass dispass Settings sequence_number35240
Ref: 5635240
Ref: api-reference dispass dispass verboseVersionInfo35322
Ref: 5735322
Node: Interface modules35568
Ref: api-reference interface-modules35684
Ref: 5835684
Node: dispass cli35908
Ref: api-reference module-dispass cli35997
Ref: 135997
Ref: api-reference dispass-cli35997
Ref: 5935997
Ref: api-reference dispass cli CLI36038
Ref: 5a36038
Ref: api-reference dispass cli CLI generate36118
Ref: 5b36118
Ref: api-reference dispass cli CLI output36925
Ref: 5c36925
Ref: api-reference dispass cli CLI passphrases36995
Ref: 5d36995
Ref: api-reference dispass cli CLI passwordPrompt37085
Ref: 5e37085
Ref: api-reference dispass cli CLI scriptableIO37401
Ref: 5f37401
Ref: api-reference dispass cli CLI setCurses37507
Ref: 6037507
Ref: api-reference dispass cli CLI verifyPassword37863
Ref: 6137863
Node: dispass gui<2>37992
Ref: api-reference module-dispass gui38109
Ref: c38109
Ref: api-reference dispass-gui38109
Ref: 6238109
Ref: api-reference dispass gui GUI38150
Ref: 6338150
Ref: api-reference dispass gui GUI clearIO38256
Ref: 6438256
Ref: api-reference dispass gui GUI clearInput38330
Ref: 6538330
Ref: api-reference dispass gui GUI clearOutput38396
Ref: 6638396
Ref: api-reference dispass gui GUI createWidgets38464
Ref: 6738464
Ref: api-reference dispass gui GUI filterLabels38535
Ref: 6838535
Ref: api-reference dispass gui GUI font38638
Ref: 6938638
Ref: api-reference dispass gui GUI fontsize38710
Ref: 6a38710
Ref: api-reference dispass gui GUI getFont38782
Ref: 6b38782
Ref: api-reference dispass gui GUI labelFocusOut39165
Ref: 6c39165
Ref: api-reference dispass gui GUI labelSelected39276
Ref: 6d39276
Ref: api-reference dispass gui GUI reset39359
Ref: 6e39359
Ref: api-reference dispass gui GUI toggleCheck39446
Ref: 6f39446
Ref: api-reference dispass gui GUI validateAndShow39524
Ref: 7039524
Ref: api-reference dispass gui GUI warn39728
Ref: 7139728
Node: dispass filehandler40305
Ref: api-reference dispass-filehandler40437
Ref: 7240437
Ref: api-reference module-dispass filehandler40437
Ref: b40437
Ref: api-reference dispass filehandler Filehandler40521
Ref: 7340521
Ref: api-reference dispass filehandler Filehandler add40660
Ref: 7440660
Ref: api-reference dispass filehandler Filehandler disable40801
Ref: 7540801
Ref: api-reference dispass filehandler Filehandler file_found40891
Ref: 7640891
Ref: api-reference dispass filehandler Filehandler file_location40967
Ref: 7740967
Ref: api-reference dispass filehandler Filehandler filehandle41062
Ref: 7841062
Ref: api-reference dispass filehandler Filehandler getDefaultFileLocation41159
Ref: 7941159
Ref: api-reference dispass filehandler Filehandler increment41243
Ref: 7a41243
Ref: api-reference dispass filehandler Filehandler labelfile41339
Ref: 7b41339
Ref: api-reference dispass filehandler Filehandler labeltup41460
Ref: 7c41460
Ref: api-reference dispass filehandler Filehandler longest_label42234
Ref: 7d42234
Ref: api-reference dispass filehandler Filehandler parse42373
Ref: 7e42373
Ref: api-reference dispass filehandler Filehandler printLabels42487
Ref: 7f42487
Ref: api-reference dispass filehandler Filehandler promptForCreation43500
Ref: 8043500
Ref: api-reference dispass filehandler Filehandler refresh43811
Ref: 8143811
Ref: api-reference dispass filehandler Filehandler remove43916
Ref: 8243916
Ref: api-reference dispass filehandler Filehandler save43998
Ref: 8343998
Ref: api-reference dispass filehandler Filehandler update44064
Ref: 8444064
Node: dispass interactive_editor44210
Ref: api-reference dispass-interactive-editor44319
Ref: 8544319
Ref: api-reference module-dispass interactive_editor44319
Ref: d44319
Ref: api-reference dispass interactive_editor InteractiveEditor44390
Ref: 8644390
Ref: api-reference dispass interactive_editor InteractiveEditor filehandler44545
Ref: 8744545
Ref: api-reference dispass interactive_editor InteractiveEditor read_label44615
Ref: 8844615
Node: Subcommand modules44736
Ref: api-reference subcommand-modules44831
Ref: 8944831
Node: dispass commands add45452
Ref: api-reference dispass-commands-add45562
Ref: 8a45562
Ref: api-reference module-dispass commands add45562
Ref: 245562
Ref: api-reference dispass commands add Command45694
Ref: 8b45694
Ref: api-reference dispass commands add Command run45882
Ref: 8c45882
Node: dispass commands generate46065
Ref: api-reference module-dispass commands generate46204
Ref: 346204
Ref: api-reference dispass-commands-generate46204
Ref: 8d46204
Ref: api-reference dispass commands generate Command46351
Ref: 8e46351
Ref: api-reference dispass commands generate Command run46530
Ref: 8f46530
Node: dispass commands gui47052
Ref: api-reference module-dispass commands gui47192
Ref: 447192
Ref: api-reference dispass-commands-gui47192
Ref: 9047192
Ref: api-reference dispass commands gui Command47324
Ref: 9147324
Ref: api-reference dispass commands gui Command run47493
Ref: 9247493
Node: dispass commands help47586
Ref: api-reference dispass-commands-help47727
Ref: 9347727
Ref: api-reference module-dispass commands help47727
Ref: 547727
Ref: api-reference dispass commands help Command47862
Ref: 9447862
Node: dispass commands increment48015
Ref: api-reference dispass-commands-increment48157
Ref: 9548157
Ref: api-reference module-dispass commands increment48157
Ref: 648157
Ref: api-reference dispass commands increment Command48307
Ref: 9648307
Ref: api-reference dispass commands increment Command run48484
Ref: 9748484
Node: dispass commands list48599
Ref: api-reference module-dispass commands list48743
Ref: 748743
Ref: api-reference dispass-commands-list48743
Ref: 9848743
Ref: api-reference dispass commands list Command48878
Ref: 9948878
Node: dispass commands remove49055
Ref: api-reference module-dispass commands remove49197
Ref: 849197
Ref: api-reference dispass-commands-remove49197
Ref: 9a49197
Ref: api-reference dispass commands remove Command49338
Ref: 9b49338
Node: dispass commands version49499
Ref: api-reference module-dispass commands version49611
Ref: 949611
Ref: api-reference dispass-commands-version49611
Ref: 9c49611
Ref: api-reference dispass commands version Command49678
Ref: 9d49678
Node: Python Module Index49842
Node: Index50371

End Tag Table


Local Variables:
coding: utf-8
End:
